name: build

on:
  push:
    branches: [ master ]
    tags:        
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']
        platform: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: üêç Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    - name: üõ† Build Hexhamming Python C extension
      run: python setup.py install
    - name: Test with pytest
      run: pytest -s .
  build-wheels:
    needs: build-and-test
    if: startsWith(github.ref, 'refs/tags')
	steps:

    - name: Set up QEMU
      if: runner.os == 'Linux'
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Build wheels
	  uses: pypa/cibuildwheel@v2.3.1
      env:
        # configure cibuildwheel to build native archs ('auto'), and some
        # emulated ones
        CIBW_ARCHS_LINUX: auto aarch64 ppc64le s390x arm64 universal2

    # Upload the wheels
    - name: Upload wheels for next job
      uses: actions/upload-artifact@master
      with:
        name: wheels
        path: dist

  publish-wheels:
    needs: build-wheels
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']

    steps:
    - name: üêç Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Download wheels from previous job
      uses: actions/download-artifact@master
      with:
        name: wheels
        path: dist
    - name: Install twine
      run: python -m pip install twine
    - name: üì¶ Publish distribution to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload dist/*.whl
